Mappings: 
  attributes: 
    project: 
      name: Redis-streaming-demo
    s3Bucket:
      name: data-reply-redis-demo
      keyConsumer: lambda-code/smarthome-consumer.zip
      keyProducer: lambda-code/smarthome-producer.zip

Resources:
  SmartHomeProducer:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !FindInMap [attributes,s3Bucket, name]
        S3Key: !FindInMap [attributes, s3Bucket, keyProducer]
      Environment:
        Variables:
          ELASTICACHE_ENDPOINT: 
            Fn::ImportValue: !Join ['-', [!FindInMap [attributes,project, name], 'elasticache-endpoint']] 
          OPENSEARCH_ENDPOINT: 
            Fn::ImportValue:  !Join ['-', [!FindInMap [attributes,project, name], 'open-search-endpoint']] 
      FunctionName: guest-smarthome-producer
      Handler: lambda_function.lambda_handler
      Role: arn:aws:iam::241018688765:role/RedisDemoLambdaRole
      Runtime: python3.9
      VpcConfig: 
        SecurityGroupIds: 
          - Ref: LambdaSecurityGroup
        SubnetIds: 
          - Fn::ImportValue: !Join ['-', [!FindInMap [attributes,project, name], 'private-subnet-1-id']]  
          - Fn::ImportValue: !Join ['-', [!FindInMap [attributes,project, name], 'private-subnet-2-id']]      
  SmartHomeConsumer:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !FindInMap [attributes, s3Bucket, name]
        S3Key: !FindInMap [attributes, s3Bucket, keyConsumer]
      Environment:
        Variables:
          ELASTICACHE_ENDPOINT: 
            Fn::ImportValue: !Join ['-', [!FindInMap [attributes,project, name], 'elasticache-endpoint']] 
          OPENSEARCH_ENDPOINT: 
            Fn::ImportValue: !Join ['-', [!FindInMap [attributes,project, name], 'open-search-endpoint']] 
      FunctionName: guest-smarthome-consumer
      Handler: lambda_function.lambda_handler
      Role: arn:aws:iam::241018688765:role/RedisDemoLambdaRole
      Runtime: python3.9
      VpcConfig: 
        SecurityGroupIds: 
          - Ref: LambdaSecurityGroup
        SubnetIds: 
          - Fn::ImportValue: !Join ['-', [!FindInMap [attributes,project, name], 'private-subnet-1-id']]   
          - Fn::ImportValue: !Join ['-', [!FindInMap [attributes,project, name], 'private-subnet-2-id']] 
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Lambda Security Group
      VpcId: 
        Fn::ImportValue: !Join ['-', [!FindInMap [attributes,project, name], 'vpc-id']] 